# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                                                   controllers.user.IndexController.index

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                                       controllers.Assets.versioned(path="/public", file: Asset)

# Map for UserController(/user)
POST    /user/login                                         controllers.user.AccountController.login
GET     /user/login                                         controllers.user.AccountController.loginPage

GET     /user/logout                                        controllers.user.AccountController.logout

POST    /user/register                                      controllers.user.AccountController.register
GET    /user/register                                       controllers.user.AccountController.registerPage

POST    /user/carts                                         controllers.user.CartController.addCart
GET     /user/carts                                         controllers.user.CartController.cartList
DELETE  /user/carts                                         controllers.user.CartController.deleteCart
PUT     /user/carts                                         controllers.user.CartController.updateCartQuantity

#POST    /user/addresses             controllers.UserController.addAddress
#GET     /user/addresses             controllers.UserController.addressList

POST    /user/order                                         controllers.user.OrderController.order
GET     /user/order                                         controllers.user.OrderController.getOrders

POST    /user/product/check  controllers.user.OrderController.checkUserOrderedThisProduct

# Map for SellerController(/seller)
GET     /seller                                             controllers.seller.IndexController.index

# reqeust: userId, userPw => response: boolean
POST    /seller/login                                       controllers.seller.AccountController.login
GET     /seller/login                                       controllers.seller.AccountController.loginPage

GET     /seller/logout                                      controllers.seller.AccountController.logout

POST    /seller/register                                    controllers.seller.AccountController.register
GET     /seller/register                                    controllers.seller.AccountController.registerPage

POST    /seller/product                                     controllers.seller.ProductController.addProduct
GET     /seller/product                                     controllers.seller.ProductController.getProducts
GET     /seller/product/register                            controllers.seller.ProductController.productRegisterPage
POST    /seller/product/register                            controllers.seller.ProductController.addProduct

#GET     /seller/product/detail          controllers.SellerController.productDetail(product: dto.ProductDto)

POST    /seller/product/stock                               controllers.seller.ProductController.getAllProductStock
PUT     /seller/product/stock                               controllers.seller.ProductController.updateStock

# Map for search(/search)
GET     /search/:code/:keyword                              controllers.product.SearchController.search(code, keyword, page: Option[Int], size:Option[Int], seq:Option[Int])
GET     /product/detail/:productId                          controllers.product.SearchController.productDetail(productId: Int)
POST    /product/detail/stock                               controllers.product.SearchController.getOneProductOption

#Map for Category(/category)
GET     /category                                           controllers.product.CategoryController.getMainCategories

# request: categoryCode => response: List[categoryCode, name]
POST     /category/children                                 controllers.product.CategoryController.getChildrens
POST    /category/siblings                                  controllers.product.CategoryController.getSiblings


# ---------------------------------------------------------------------------
#                           Routes For Rest API
# ---------------------------------------------------------------------------

# User Account
POST    /api/v1/user/login                                  restcontrollers.user.AccountController.login
POST    /api/v1/user                                        restcontrollers.user.AccountController.regist

POST    /api/v1/user/login/kakao                            restcontrollers.user.AccountController.kakaoLogin
POST    /api/v1/user/kakao                                  restcontrollers.user.AccountController.kakaoRegist

# Carts
GET     /api/v1/user/:userId/cart                           restcontrollers.user.CartController.getCarts(userId)
POST    /api/v1/user/:userId/cart                           restcontrollers.user.CartController.addCart(userId)

GET     /api/v1/user/:userId/cart/:cartId                   restcontrollers.user.CartController.getCart(userId, cartId: Int)
PUT     /api/v1/user/:userId/cart/:cartId                   restcontrollers.user.CartController.updateQuantity(userId, cartId: Int)
DELETE  /api/v1/user/:userId/cart/:cartId                   restcontrollers.user.CartController.deleteCart(userId, cartId: Int)

# Orders
GET     /api/v1/user/:userId/order                          restcontrollers.user.OrderController.getOrders(userId)
POST    /api/v1/user/:userId/order                          restcontrollers.user.OrderController.createOrder(userId)

#GET     /api/v1/user/:userId/product/:productId             restcontrollers.user.OrderController.checkUserOrdered(userId,productId: Int)
GET     /api/v1/user/:userId/product/:productId             restcontrollers.user.CommunicateController.recentlyOrderedProductInfo(userId: String, productId: Int)

# User Reviews
POST    /api/v1/user/:userId/review                         restcontrollers.user.CommunicateController.writeReview(userId: String)
#PUT     /api/v1/user/:userId/review/:reviewId
#GET     /api/v1/user/:userId/review/:reviewId
#DELETE  /api/v1/user/:userId/review/:reviewId
GET     /api/v1/user/:userId/product/:productId/info        restcontrollers.user.CommunicateController.recentlyOrderedProductInfo(userId: String, productId: Int)

# User Data
GET     /api/v1/user/:userId                                restcontrollers.user.AccountController.getUserData(userId: String)
PUT     /api/v1/user/:userId                                restcontrollers.user.AccountController.updateUser(userId: String)

# User QNAs
POST    /api/v1/user/:userId/qna                            restcontrollers.user.CommunicateController.writeQna(userId)

# Product Categories
GET     /api/v1/category/main                               restcontrollers.product.CategoryController.getMainCategories
GET     /api/v1/category/:code/sibling                      restcontrollers.product.CategoryController.getSiblings(code)
GET     /api/v1/category/:code/children                     restcontrollers.product.CategoryController.getChildrens(code)

# Product Search
GET     /api/v1/product/search/:keyword                     restcontrollers.product.SearchController.search(code: Option[String], keyword, page: Option[Int], size: Option[Int],seq: Option[Int])
GET     /api/v1/product/:productId                          restcontrollers.product.SearchController.getProduct(productId: Int)
GET     /api/v1/product/:productId/reviews                  restcontrollers.product.SearchController.getReviews(productId: Int, size: Option[Int], page: Option[Int])
GET     /api/v1/product/:productId/qnas                     restcontrollers.product.SearchController.getQnas(productId: Int, size: Option[Int], page: Option[Int])

# Seller Account
POST    /api/v1/seller/login                                restcontrollers.seller.AccountController.login
POST    /api/v1/seller                                      restcontrollers.seller.AccountController.register

# Seller Product
POST    /api/v1/seller/:sellerId/product                    restcontrollers.seller.ProductController.addProduct(sellerId)
GET     /api/v1/seller/:sellerId/product                    restcontrollers.seller.ProductController.getProducts(sellerId)

# Seller Product Stock
GET     /api/v1/seller/:sellerId/product/:productId/stock   restcontrollers.seller.ProductController.getAllProductStock(sellerId, productId: Int)
PUT     /api/v1/seller/:sellerId/product/:productId/stock   restcontrollers.seller.ProductController.updateStock(sellerId, productId:Int)

